parameters:
  agentOs: ''
  pool: {}
  strategy: ''
  _PREVIEW_VSTS_DOCKER_IMAGE: ''

jobs:
- template: /eng/common/templates/job/job.yml
  parameters:
    name: ${{ parameters.agentOs }}
    enableTelemetry: true
    enableMicrobuild: true
    pool: ${{ parameters.pool }}
    strategy: ${{ parameters.strategy }}
    variables: 
      - _PREVIEW_VSTS_DOCKER_IMAGE: ${{ parameters._PREVIEW_VSTS_DOCKER_IMAGE }}
      - _HelixType: build/product
      - _HelixBuildConfig: $(_BuildConfig)
      - _WindowsAssestManifestName: Windows_NT-AnyCPU.xml
      - ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
        - _HelixSource: pr/dotnet/CliCommandLineParser/$(Build.SourceBranch)
        - _OfficialBuildIdArgs: ''
        - _PublishArgs: ''
        - _SignArgs: ''
      - ${{ if ne(variables['Build.Reason'], 'PullRequest') }}:
        - _HelixSource: official/dotnet/CliCommandLineParser/$(Build.SourceBranch)
        - _OfficialBuildIdArgs: /p:OfficialBuildId=$(BUILD.BUILDNUMBER)
        - _PublishArgs: /p:DotNetPublishBlobFeedKey=$(dotnetfeed-storage-access-key-1)
                        /p:DotNetPublishBlobFeedUrl=$(PB_PublishBlobFeedUrl)
                        /p:DotNetPublishToBlobFeed=$(_DotNetPublishToBlobFeed)
                        /p:DotNetPublishUsingPipelines=$(_PublishUsingPipelines)
                        /p:DotNetArtifactsCategory=$(_DotNetArtifactsCategory)
                        /p:DotNetSymbolServerTokenMsdl=$(microsoft-symbol-server-pat)
                        /p:DotNetSymbolServerTokenSymWeb=$(symweb-symbol-server-pat)
                        /p:PB_PublishType=$(_PublishType)
        - _SignArgs: /p:DotNetSignType=$(_SignType) /p:TeamName=$(_TeamName)

    steps:
    - checkout: self
      clean: true
    - ${{ if ne(variables['Build.Reason'], 'PullRequest') }}:
      - task: AzureKeyVault@1
        inputs:
          azureSubscription: 'HelixProd_KeyVault'
          KeyVaultName: HelixProdKV
          SecretsFilter: 'HelixApiAccessToken'
        condition: always()
      - task: AzureKeyVault@1
        inputs:
          azureSubscription: 'DotNet-Engineering-Services_KeyVault'
          KeyVaultName: EngKeyVault
          SecretsFilter: 'dotnetfeed-storage-access-key-1,microsoft-symbol-server-pat,symweb-symbol-server-pat'
        condition: succeeded()

    - ${{ if eq(parameters.agentOs, 'Windows_NT') }}:
      - script: eng\CIBuild.cmd
                  -configuration %BuildConfig%
                  $(_PublishArgs)
                  $(_SignArgs)
                  $(_OfficialBuildIdArgs)
        displayName: Build
        env:
          BuildConfig: $(_BuildConfig)
          BlobFeedUrl: $(PB_PublishBlobFeedUrl)
          PublishType: $(_PublishType)

    - ${{ if ne(parameters.agentOs, 'Windows_NT') }}:
      - script: eng/cibuild.sh
                  --configuration $BuildConfig
                  $(_PublishArgs)
                  $(_SignArgs)
                  $(_OfficialBuildIdArgs)
        displayName: Build
        env:
          BuildConfig: $(_BuildConfig)
          BlobFeedUrl: $(PB_PublishBlobFeedUrl)
          PublishType: $(_PublishType)

    - task: PublishTestResults@1
      displayName: Publish Test Results
      inputs:
        testRunner: XUnit
        testResultsFiles: 'artifacts/TestResults/$(_BuildConfig)/*.xml'
        testRunTitle: '$(_AgentOSName)_$(Agent.JobName)'
        platform: '$(BuildPlatform)'
        configuration: '$(_BuildConfig)'
      condition: not(succeeded())

    - task: CopyFiles@2
      displayName: Gather Logs
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)'
        Contents: |
         artifacts/log/$(_BuildConfig)/**/*
         artifacts/TestResults/$(_BuildConfig)/**/*
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
      continueOnError: true
      condition: not(succeeded())

    - task: PublishBuildArtifacts@1
      displayName: Publish Logs to VSTS
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: '$(_AgentOSName)_$(Agent.JobName)_$(Build.BuildNumber)'
        publishLocation: Container
      continueOnError: true
      condition: not(succeeded())
